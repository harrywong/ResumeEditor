<Window x:Class="ResumeEditor.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        DataContext="{Binding Source={StaticResource Locator}, Path=Main}"
        Title="ResumeEditor v0.1" Height="768" Width="1024">
    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="Padding" Value="10,5"></Setter>
        </Style>
        <ContextMenu x:Key="ListContextMenu">
            <MenuItem Header="Open in explorer" Command="{Binding OpenExplorerCommand}" CommandParameter="{Binding ElementName=DataGrid}"></MenuItem>
        </ContextMenu>
    </Window.Resources>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBox Grid.Column="0" Margin="0" Text="{Binding ResumeDataFilePath}" IsReadOnly="True" VerticalContentAlignment="Center"></TextBox>
            <Button Grid.Column="1" Content="Select" Padding="10,5" Margin="10,0,0,0" Command="{Binding LoadResumeDataCommand}"></Button>
        </Grid>
        <Grid Grid.Row="1" Margin="0,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <GridSplitter Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Center" Width="2" Background="Gray"></GridSplitter>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <TreeView Grid.Row="0" Margin="2">
                    <TreeView.Resources>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="IsExpanded" Value="True"></Setter>
                        </Style>
                    </TreeView.Resources>
                    <TreeViewItem Header="Labels" ItemsSource="{Binding DisplayLabels, Mode=OneWay}">
                    </TreeViewItem>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <command:EventToCommand
                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.TreeviewSelectionChangedCommand}"
                                    PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TreeView>
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Row="0" Grid.ColumnSpan="2" Content="Filter"></Label>
                    <Label Grid.Row="1" Grid.Column="0" Content="Title"></Label>
                    <Label Grid.Row="2" Grid.Column="0" Content="Size"></Label>
                    <Label Grid.Row="3" Grid.Column="0" Content="Tracker"></Label>
                    <TextBox Grid.Row="1" Grid.Column="1" Margin="2" Padding="1,2" Text="{Binding TitleFileter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <command:EventToCommand
                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.FilterCommand}" PassEventArgsToCommand="False" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox Grid.Row="2" Grid.Column="1" Margin="2" Padding="1,2" Text="{Binding SizeFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <command:EventToCommand
                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.FilterCommand}" PassEventArgsToCommand="False" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox Grid.Row="3" Grid.Column="1" Margin="2" Padding="1,2" Text="{Binding TrackerFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <command:EventToCommand
                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.FilterCommand}" PassEventArgsToCommand="False" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </Grid>
            </Grid>
            <DataGrid x:Name="DataGrid" Grid.Column="2" ItemsSource="{Binding DisplayItems}" AutoGenerateColumns="False" GridLinesVisibility="All" HorizontalGridLinesBrush="LightGray" VerticalGridLinesBrush="LightGray" CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="True">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Title" Binding="{Binding Caption}" Width="*"></DataGridTextColumn>
                    <DataGridTextColumn Header="Path" Binding="{Binding Path}" Width="200"></DataGridTextColumn>
                    <DataGridTextColumn Header="Tracker" Binding="{Binding Tracker}" Width="200"></DataGridTextColumn>
                    <DataGridTextColumn Header="AddOn" Binding="{Binding AddOn}" Width="150"></DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Orientation="Horizontal" >
                <Label Content="Create Label for Torrent:"></Label>
                <ComboBox ItemsSource="{Binding LabelModes}" SelectedValue="{Binding LabelMode}" DisplayMemberPath="Value" SelectedValuePath="Key" SelectedIndex="0" VerticalContentAlignment="Center" Width="150">
                </ComboBox>
                <Button Content="Run" Margin="10,0,0,0" Command="{Binding CreateLabelsCommand}"></Button>
            </StackPanel>
            <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
                <Button HorizontalAlignment="Right" Content="Save" Command="{Binding SaveCommand}"></Button>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
